return {
	ActorEditor = nil,
	AreaEditor = nil,
	AssemblyEditor = nil,
	BaseEditor = nil,
	EditorActivity = nil,
	GameActivity = {
		CPUTeam = "Which team is CPU-managed, if any. LEGACY, now controlled by PlayerNIsHuman, where N is between 1 and 4 inclusive.",
		DeliveryDelay = "Time it takes for a delivery to be made in milliseconds.",
		DefaultFogOfWar = "Default fog of war value.",
		DefaultRequireClearPathToOrbit = "Default clear path to orbit value.",
		DefaultDeployUnits = "Default deploy units value.",
		DefaultGoldCake = "Default gold amount for Cake difficulty.",
		DefaultGoldEasy = "Default gold amount for Easy difficulty.",
		DefaultGoldMedium = "Default gold amount for Medium difficulty.",
		DefaultGoldHard = "Default gold amount for Hard difficulty.",
		DefaultGoldNuts = "Default gold amount for Nuts difficulty.",
		FogOfWarSwitchEnabled = "Whether the fog of war switch is enabled in the scenario setup dialog.",
		DeployUnitsSwitchEnabled = "Whether the deploy units switch is enabled in the scenario setup dialog.",
		GoldSwitchEnabled = "Whether the gold switch is enabled in the scenario setup dialog.",
		RequireClearPathToOrbitSwitchEnabled = "Whether the require clear path to orbit switch is enabled in the scenario setup dialog.",
		BuyMenuEnabled = "Whether the buy menu is enabled.",
	},
	GAScripted = {
		ScriptPath = "The path to the lua script file that defines this' behaviors with overrides of its virtual functions",
		LuaClassName = "The name of the class (table) defining the logic of this in Lua, as specified in the script file",
	},
	GATutorial = nil,
	GibEditor = nil,
	MultiplayerGame = nil,
	MultiplayerServerLobby = nil,
	SceneEditor = nil,
	ACDropShip = {
		AutoStabilize = "Automatically stabilize the craft with the upper thrusters? Defaults to yes.",
		MaxEngineAngle = "Maximum engine rotation in degrees",
		LateralControlSpeed = "Abstract speed at which Lateralcontroll is changed",
		HoverHeightModifier = "The modifier for the height at which this ACDropShip should hover above terrain when releasing its cargo. Used in cpp and Lua AI.",
	},
	ACrab = {
		-- JumpTime = "",
		JetTime = "The max total time, in ms, that the jetpack can be used without pause",
		-- JumpReplenishRate = "",
		JetReplenishRate = "A multiplier affecting how fast the jetpack fuel will replenish when not in use. 1 means that jet time replenishes at 2x speed in relation to depletion.",
		-- JumpAngleRange = "",
		JetAngleRange = "Ratio at which the jetpack angle follows aim angle",
		AimRangeUpperLimit = "The maximum angle MountedMO can be aimed up, positive values only, in radians",
		AimRangeLowerLimit = "The maximum angle MountedMO can be aimed down, positive values only, in radians",
	},
	ACraft = {
		Exit = {
			VelocitySpread = "The spread in velocity, ratio",
			Radius = "The width from the center tanget created by the velocity vector out from the offet point. This times two gives the total width of the opening.",
			Range = "How far away the exit can suck objects in from",
		},
		HatchDelay = "The time it takes to open or close the hatch, in ms.",
		DeliveryDelayMultiplier = "Mutliplier to apply to default delivery time",
		ExitInterval = "The delay between each exiting passenger Actor",
		CanLand = "Whether this is capable of landing on the ground at all",
		MaxPassengers = "The maximum number of actors that fit in the inventory",
		ScuttleIfFlippedTime = "The time after which the craft will scuttle automatically, if tipped over.",
		ScuttleOnDeath = "Whether the craft will self-destruct at zero health.",
	},
	ACRocket = {
		MaxGimbalAngle = "How much the main engine is able to tilt in order to stabilize the rocket.",
	},
	Activity = {
		Description = "User-friendly description of what this Activity is all about.",
		SceneName = "The name of the Scene in which this Activity takes place.",
		MaxPlayerSupport = "How many separate players this Activity can support at the same time.",
		MinTeamsRequired = "How many separate teams this Activity can support at the same time.",
		Difficulty = "Current difficulty setting of this Activity.",
		CraftOrbitAtTheEdge = "If true then on non-wrapping maps craft beyond the edge of the map are considered orbited.",
		InCampaignStage = "Which stage of the campaign this Activity appears in, if any (-1 means it's not in the campaign).",
		TeamOfPlayer1 = "",
		TeamOfPlayer2 = "",
		TeamOfPlayer3 = "",
		TeamOfPlayer4 = "The designated team of player 4",
		Player1IsHuman = "",
		Player2IsHuman = "",
		Player3IsHuman = "",
		Player4IsHuman = "Whether player 4 is Human or not, and needs a screen etc.",
		Team1Name = "",
		Team2Name = "",
		Team3Name = "",
		Team4Name = "Name of team 4",
		Team1Funds = "",
		Team2Funds = "",
		Team3Funds = "",
		Team4Funds = "Gold counter for team 4.",
		TeamFundsShareOfPlayer1 = "",
		TeamFundsShareOfPlayer2 = "",
		TeamFundsShareOfPlayer3 = "",
		TeamFundsShareOfPlayer4 = "The ratio of how much player 4 contributed to their team's funds at the start of the Activity.",
		FundsContributionOfPlayer1 = "",
		FundsContributionOfPlayer2 = "",
		FundsContributionOfPlayer3 = "",
		FundsContributionOfPlayer4 = "How much player 4 contributed to their team's funds at the start of the Activity.",
	},
	Actor = {
		Status = "0 for STABLE, 1 for UNSTABLE, 2 for INACTIVE, 3 for DYING, and 4 for DEAD.",
		DeploymentID = "ID of deployment which spawned this actor",
		PassengerSlots = "How many passenger slots this actor will take in a craft",
		Health = "Health of the actor",
		MaxHealth = "Maximum health of the actor",
		ImpulseDamageThreshold = "Threshold for taking damage from travel impulses, in kg * m/s",
		StableRecoveryDelay = "The delay before regaining stability after losing it, in MS",
		AimAngle = "Current Aim angle within the AimRange",
		AimRange = "The arc range of the aiming angle, in each direction, in radians. Eg if HalfPI, it means full 180 degree range",
		AimDistance = "How far the actor aims/looks by default",
		SharpAimDelay = "The time it takes to achieve complete full sharp aiming",
		SightDistance = "How far this guy's AI can see when he's just looking ahead",
		Perceptiveness = "How perceptive this is of alarming events going on around him, 0.0 - 1.0",
		CanRevealUnseen = "Whether or not this actor can reveal unseen areas by looking",
		CharHeight = "How tall the Actor is in pixels",
		MaxInventoryMass = "The mass limit for this Actor's inventory. -1 means there's no limit.",
		AIMode = "The current mode the AI is set to perform as",
		Organic = "Flag for whether or not this Actor is organic. Useful for lua purposes and mod support.",
		Mechanical = "Flag for whether or not this Actor is robotic. Useful for lua purposes and mod support.",
	},
	ADoor = {
		DoorMoveTime = "The time it takes to open or close the door in ms.",
		ClosedByDefault = "Whether the closed position is the default.",
		ResetDefaultDelay = "How long the door stays in the non-default state before returning to the default state.",
		SensorInterval = "The delay between each sensing pass in ms.",
		DrawMaterialLayerWhenOpen = "Whether to draw the door's silhouette to the terrain material layer when fully open.",
		DrawMaterialLayerWhenClosed = "Whether to draw the door's silhouette to the terrain material layer when fully closed.",
	},
	ADSensor = {
		SkipPixels = "How many pixels to skip between sensing pixels.",
	},
	AEmitter = {
		EmissionEnabled = "",
		EmissionCount = "",
		EmissionCountLimit = "",
		ParticlesPerMinute = "",
		NegativeThrottleMultiplier = "",
		PositiveThrottleMultiplier = "",
		Throttle = "",
		EmissionsIgnoreThis = "",
		BurstSize = "",
		BurstScale = "",
		BurstDamage = "",
		EmitterDamageMultiplier = "",
		BurstSpacing = "",
		BurstTriggered = "",
		EmissionDamage = "",
		FlashScale = "",
		FlashOnlyOnBurst = "",
		LoudnessOnEmit = "",
	},
	AHuman = {
		ThrowPrepTime = "",
		LookToAimRatio = "",
		-- JumpTime = "",
		JetTime = "",
		-- JumpReplenishRate = "",
		JetReplenishRate = "",
		-- JumpAngleRange = "",
		JetAngleRange = "",
		FGArmFlailScalar = "",
		BGArmFlailScalar = "",
		ArmSwingRate = "",
		StandRotAngleTarget = "",
		WalkRotAngleTarget = "",
		CrouchRotAngleTarget = "",
		JumpRotAngleTarget = "",
	},
	Arm = {
		GripStrength = "",
		ThrowStrength = "",
		MaxLength = "",
		WillIdle = "",
		MoveSpeed = "",
	},
	AtomGroup = {
		AutoGenerate = "",
		Resolution = "",
		Depth = "",
	},
	Attachable = {
		DrawAfterParent = "",
		DeleteWhenRemovedFromParent = "",
		ApplyTransferredForcesAtOffset = "",
		GibWithParentChance = "",
		ParentGibBlastStrengthMultiplier = "",
		JointStrength = "",
		-- Strength = "",
		JointStiffness = "",
		-- Stiffness = "",
		InheritsHFlipped = "",
		InheritsRotAngle = "",
		-- InheritedRotAngleRadOffset = "",
		InheritedRotAngleOffset = "",
		InheritedRotAngleDegOffset = "",
		InheritsFrame = "",
		CollidesWithTerrainWhileAttached = "",
	},
	BunkerAssembly = {
		ParentScheme = "",
	},
	BunkerAssemblyScheme = {
		Limit = "",
		OneTypePerScene = "",
		MaxDeployments = "",
	},
	Deployment = {
		SpawnRadius = "",
		WalkRadius = "",
		ID = "",
		HFlipped = "",
	},
	Emission = {
		ParticlesPerMinute = "",
		BurstSize = "",
		Spread = "",
		MinVelocity = "",
		MaxVelocity = "",
		LifeVariation = "",
		PushesEmitter = "",
		InheritsVel = "",
		StartTimeMS = "",
		StopTimeMS = "",
	},
	Gib = {
		Count = "",
		Spread = "",
		MinVelocity = "",
		MaxVelocity = "",
		LifeVariation = "",
		InheritsVel = "",
		IgnoresTeamHits = "",
		SpreadMode = "",
	},
	GlobalScript = {
		LuaClassName = "",
		LateUpdate = "",
	},
	HDFirearm = {
		RateOfFire = "",
		ActivationDelay = "",
		DeactivationDelay = "",
		ReloadTime = "",
		FullAuto = "",
		FireIgnoresThis = "",
		Reloadable = "",
		RecoilTransmission = "",
		IsAnimatedManually = "",
		ShakeRange = "",
		SharpShakeRange = "",
		NoSupportFactor = "",
		ParticleSpreadRange = "",
		ShellEjectAngle = "",
		ShellSpreadRange = "",
		ShellAngVelRange = "",
		ShellVelVariation = "",
		LegacyCompatibilityRoundsAlwaysFireUnflipped = "",
	},
	HeldDevice = {
		HeldDeviceType = "",
		OneHanded = "",
		DualWieldable = "",
		GripStrengthMultiplier = "",
		SharpLength = "",
		Loudness = "",
	},
	Icon = {
		FrameCount = "",
	},
	Leg = {
		WillIdle = "",
		MoveSpeed = "",
	},
	LimbPath = {
		StartSegCount = "",
		EndSegCount = "",
		SlowTravelSpeed = "",
		NormalTravelSpeed = "",
		FastTravelSpeed = "",
		PushForce = "",
	},
	Loadout = nil,
	Magazine = {
		RoundCount = "",
		RTTRatio = "",
		Discardable = "",
		AIBlastRadius = "",
	},
	Material = {
		Index = "",
		Priority = "",
		Piling = "",
		-- Integrity = "",
		StructuralIntegrity = "",
		-- Restitution = "",
		Bounce = "",
		Friction = "",
		Stickiness = "",
		DensityKGPerVolumeL = "",
		DensityKGPerPixel = "",
		GibImpulseLimitPerVolumeL = "",
		GibWoundLimitPerVolumeL = "",
		SettleMaterial = "",
		-- SpawnMaterial = "",
		TransformsInto = "",
		IsScrap = "",
		UseOwnColor = "",
	},
	MetaPlayer = {
		Name = "",
		Team = "",
		Human = "",
		InGamePlayer = "",
		Aggressiveness = "",
		GameOverRound = "",
		NativeTechModule = "",
		NativeCostMultiplier = "",
		ForeignCostMultiplier = "",
		BrainPool = "",
		Funds = "",
		OffensiveBudget = "",
		OffensiveTarget = "",
	},
	MetaSave = {
		SavePath = "",
		PlayerCount = "",
		Difficulty = "",
		RoundCount = "",
		SiteCount = "",
	},
	MOPixel = {
		MinLethalRange = "",
		MaxLethalRange = "",
	},
	MOSParticle = nil,
	MOSprite = {
		FrameCount = "",
		SpriteAnimMode = "",
		SpriteAnimDuration = "",
		HFlipped = "",
		AngularVel = "",
		SettleMaterialDisabled = "",
	},
	MOSRotating = {
		DeepCheck = "",
		OrientToVel = "",
		GibImpulseLimit = "",
		GibWoundLimit = "",
		-- WoundLimit = "",
		GibBlastStrength = "",
		WoundCountAffectsImpulseLimitRatio = "",
		GibAtEndOfLifetime = "",
		EffectOnGib = "",
		LoudnessOnGib = "",
		DamageMultiplier = "",
	},
	MovableObject = {
		Mass = "",
		Scale = "",
		GlobalAccScalar = "",
		AirResistance = "",
		AirThreshold = "",
		PinStrength = "",
		RestThreshold = "",
		LifeTime = "",
		Sharpness = "",
		HitsMOs = "",
		GetsHitByMOs = "",
		IgnoresTeamHits = "",
		IgnoresAtomGroupHits = "",
		IgnoresAGHitsWhenSlowerThan = "",
		RemoveOrphanTerrainRadius = "",
		RemoveOrphanTerrainMaxArea = "",
		RemoveOrphanTerrainRate = "",
		MissionCritical = "",
		CanBeSquished = "",
		HUDVisible = "",
		ScriptPath = "",
		EffectStartTime = "",
		EffectRotAngle = "",
		InheritEffectRotAngle = "",
		RandomizeEffectRotAngle = "",
		RandomizeEffectRotAngleEveryFrame = "",
		EffectStopTime = "",
		EffectStartStrength = "",
		EffectStopStrength = "",
		EffectAlwaysShows = "",
		DamageOnCollision = "",
		DamageOnPenetration = "",
		WoundDamageMultiplier = "",
		ApplyWoundDamageOnCollision = "",
		ApplyWoundBurstDamageOnCollision = "",
		IgnoreTerrain = "",
		SimUpdatesBetweenScriptedUpdates = "",
	},
	PEmitter = {
		EmissionEnabled = "",
		EmissionCount = "",
		EmissionCountLimit = "",
		ParticlesPerMinute = "",
		NegativeThrottleMultiplier = "",
		PositiveThrottleMultiplier = "",
		Throttle = "",
		EmissionsIgnoreThis = "",
		BurstSize = "",
		BurstScale = "",
		BurstSpacing = "",
		BurstTriggered = "",
		FlashScale = "",
		FlashOnlyOnBurst = "",
		LoudnessOnEmit = "",
	},
	PieMenu = {
		IconSeparatorMode = "",
		FullInnerRadius = "",
		BackgroundThickness = "",
		BackgroundSeparatorSize = "",
		DrawBackgroundTransparent = "",
		BackgroundColor = "",
		BackgroundBorderColor = "",
		SelectedItemBackgroundColor = "",
	},
	PieSlice = {
		Type = "",
		Direction = "",
		CanBeMiddleSlice = "",
		Enabled = "",
		ScriptPath = "",
		FunctionName = "",
		DrawFlippedToMatchAbsoluteAngle = "",
	},
	Round = {
		ParticleCount = "",
		FireVelocity = "",
		InheritsFirerVelocity = "",
		Separation = "",
		LifeVariation = "",
		ShellVelocity = "",
		AILifeTime = "",
		AIFireVel = "",
		AIPenetration = "",
	},
	Scene = {
		Area = {
			Name = "",
		},
		MetagamePlayable = "",
		Revealed = "",
		MetasceneParent = "",
		MetagameInternal = "",
		OwnedByTeam = "",
		RoundIncome = "",
		P1BuildBudget = "",
		P2BuildBudget = "",
		P3BuildBudget = "",
		P4BuildBudget = "",
		P1BuildBudgetRatio = "",
		P2BuildBudgetRatio = "",
		P3BuildBudgetRatio = "",
		P4BuildBudgetRatio = "",
		AutoDesigned = "",
		TotalInvestment = "",
		ScanScheduledTeam1 = "",
		ScanScheduledTeam2 = "",
		ScanScheduledTeam3 = "",
		ScanScheduledTeam4 = "",
	},
	SceneLayer = {
		WrapX = "",
		WrapY = "",
	},
	SceneObject = {
		SOPlacer = {
			HFlipped = "",
			Team = "",
		},
		GoldValue = "",
		-- GoldCost = "",
		Buyable = "",
		BuyableMode = "",
		Team = "",
		PlacedByPlayer = "",
	},
	SLBackground = {
		FrameCount = "",
		SpriteAnimMode = "",
		SpriteAnimDuration = "",
		IsAnimatedManually = "",
		DrawTransparent = "",
		IgnoreAutoScaling = "",
		CanAutoScrollX = "",
		CanAutoScrollY = "",
		AutoScrollStepInterval = "",
	},
	SLTerrain = nil,
	SoundContainer = {
		SoundSelectionCycleMode = "",
		-- CycleMode = "",
		SoundOverlapMode = "",
		Immobile = "",
		AttenuationStartDistance = "",
		LoopSetting = "",
		Priority = "",
		AffectedByGlobalPitch = "",
		Volume = "",
		Pitch = "",
		PitchVariation = "",
	},
	SoundSet = {
		SoundSelectionCycleMode = "",
	},
	TDExplosive = {
		IsAnimatedManually = "",
	},
	TerrainDebris = {
		DebrisPieceCount = "",
		DebrisPlacementMode = "",
		OnlyBuried = "",
		MinDepth = "",
		MaxDepth = "",
		MinRotation = "",
		MaxRotation = "",
		CanHFlip = "",
		CanVFlip = "",
		FlipChance = "",
		DensityPerMeter = "",
	},
	TerrainFrosting = {
		MinThickness = "",
		MaxThickness = "",
		InAirOnly = "",
	},
	TerrainObject = nil,
	ThrownDevice = {
		MinThrowVel = "",
		MaxThrowVel = "",
		TriggerDelay = "",
		ActivatesWhenReleased = "",
	},
	Turret = {
		MountedDeviceRotationOffset = "",
	},
	MetaMan = {
		GameState = "",
		GameName = "",
		TeamCount = "",
		CurrentRound = "",
		RevealedScenes = "",
		RevealRate = "",
		RevealExtra = "",
		CurrentOffensive = "",
		Difficulty = "",
	},
	MovableMan = {
		SplashRatio = "",
	},
	SceneMan = nil,
	SettingsMan = {
		ResolutionX = "",
		ResolutionY = "",
		ResolutionMultiplier = "",
		DisableMultiScreenResolutionValidation = "",
		ForceVirtualFullScreenGfxDriver = "",
		ForceDedicatedFullScreenGfxDriver = "",
		TwoPlayerSplitscreenVertSplit = "",
		MasterVolume = "",
		MuteMaster = "",
		MusicVolume = "",
		MuteMusic = "",
		SoundVolume = "",
		MuteSounds = "",
		SoundPanningEffectStrength = "",
		ListenerZOffset = "",
		MinimumDistanceForPanning = "",
		ShowForeignItems = "",
		FlashOnBrainDamage = "",
		BlipOnRevealUnseen = "",
		MaxUnheldItems = "",
		UnheldItemsHUDDisplayRange = "",
		AlwaysDisplayUnheldItemsInStrategicMode = "",
		SloMoThreshold = "",
		SloMoDurationMS = "",
		EndlessMode = "",
		EnableCrabBombs = "",
		CrabBombThreshold = "",
		ShowEnemyHUD = "",
		SmartBuyMenuNavigation = "",
		LaunchIntoActivity = "",
		DefaultActivityType = "",
		DefaultActivityName = "",
		DefaultSceneName = "",
		DisableLuaJIT = "",
		RecommendedMOIDCount = "",
		SimplifiedCollisionDetection = "",
		SceneBackgroundAutoScaleMode = "",
		DisableFactionBuyMenuThemes = "",
		EnableParticleSettling = "",
		EnableMOSubtraction = "",
		DeltaTime = "",
		RealToSimCap = "",
		AllowSavingToBase = "",
		ShowMetaScenes = "",
		SkipIntro = "",
		ShowToolTips = "",
		CaseSensitiveFilePaths = "",
		DisableLoadingScreenProgressReport = "",
		LoadingScreenProgressReportPrecision = "",
		ConsoleScreenRatio = "",
		ConsoleUseMonospaceFont = "",
		AdvancedPerformanceStats = "",
		MenuTransitionDurationMultiplier = "",
		DrawAtomGroupVisualizations = "",
		DrawHandAndFootGroupVisualizations = "",
		DrawLimbPathVisualizations = "",
		DrawRaycastVisualizations = "",
		DrawPixelCheckVisualizations = "",
		PrintDebugInfo = "",
		MeasureModuleLoadTime = "",
		PlayerNetworkName = "",
		NetworkServerName = "",
		UseNATService = "",
		NATServiceAddress = "",
		NATServerName = "",
		NATServerPassword = "",
		UseExperimentalMultiplayerSpeedBoosts = "",
		ClientInputFps = "",
		ServerTransmitAsBoxes = "",
		ServerBoxWidth = "",
		ServerBoxHeight = "",
		ServerUseHighCompression = "",
		ServerUseFastCompression = "",
		ServerHighCompressionLevel = "",
		ServerFastAccelerationFactor = "",
		ServerUseInterlacing = "",
		ServerEncodingFps = "",
		ServerSleepWhenIdle = "",
		ServerSimSleepWhenIdle = "",
		VisibleAssemblyGroup = "",
		DisableMod = "",
		EnableGlobalScript = "",
		MouseSensitivity = "",
	},
	MetagameGUI = nil,
	Atom = {
		TrailLength = "",
		TrailLengthVariation = "",
	},
	Box = {
		Width = "",
		Height = "",
	},
	Color = {
		Index = "",
		R = "",
		G = "",
		B = "",
	},
	ContentFile = {
		FilePath = "",
		-- Path = "",
	},
	DataModule = {
		ModuleName = "",
		Author = "",
		Description = "",
		IsFaction = "",
		IsMerchant = "",
		SupportedGameVersion = "",
		Version = "",
		ScanFolderContents = "",
		IgnoreMissingItems = "",
		CrabToHumanSpawnRatio = "",
		ScriptPath = "",
		Require = "",
	},
	Entity = {
		CopyOf = "",
		PresetName = "",
		-- InstanceName = "",
		Description = "",
		RandomWeight = "",
		AddToGroup = "",
	},
	InputMapping = {
		KeyMap = "",
		MouseButtonMap = "",
		JoyButtonMap = "",
		StickMap = "",
		AxisMap = "",
		DirectionMap = "",
	},
	InputScheme = {
		Device = "",
		Preset = "",
		JoystickDeadzoneType = "",
		JoystickDeadzone = "",
		DigitalAimSpeed = "",
	},
	Matrix = {
		AngleDegrees = "",
		AngleRadians = "",
	},
	Serializable = nil,
	Vector = {
		X = "",
		Y = "",
	},
}
